# Trigger on every push to the default (main) branch
# https://nwdlabs.atlassian.net/wiki/spaces/QA/pages/92405815/CI+CD#release
name: release

env:
  REGISTRY: ghcr.io
  ORGANIZATION: aluvare
  IMAGE_NAME: kalidocker-vnc-lite

on:
  push:
    branches: [ 'main' ]

jobs:
  build_and_create_release:
    runs-on: [ self-hosted, k8s-runners ]
    steps:
      - name: Cleanup 
        run: sudo find . -name . -o -prune -exec rm -rf -- {} +
      
      - name: Login to gh
        run: git config --global url.https://nstrlabs:${{ secrets.ACTION_CLONE_TOKEN }}@github.com/.insteadOf https://github.com/
        
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            lfs: true
            fetch-depth: 0

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "v"

      - name: Create Release
        id: create_release
        uses: nickatnight/releases-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: "main"
          tag: ${{ steps.tag_version.outputs.new_tag }}       

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ env.ORGANIZATION }}
            password: ${{ secrets.GHCR_PAT }}

      - name: Install QEMU
        uses: docker/setup-qemu-action@v1

      - name: Install Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
            images: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_NAME }}
            tags: |
              ${{ steps.tag_version.outputs.new_version }}
              latest

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v3.2.0
        with:
            file: ./Dockerfile
            context: .
            platforms: linux/amd64,linux/arm64/v8
            push: true
            tags: "${{ steps.meta.outputs.tags }}"
            labels: "${{ steps.meta.outputs.labels }}"
    
    outputs:
      release_version: ${{ steps.tag_version.outputs.new_version }}    
